**assistant**:
> Below are selected log entries of past conversations, as part of an experimental AI memory system. They may have no bearing on the chat.
> 
> 
>   2024-02-04:
>   Ensuring Subdirectory Interpretation for Relative Paths
> 
> 
> 
>   2023-08-19:
>   James inquired about finding a file in Python with known directory but incomplete filename; Arachne suggested using the `glob` module for pattern matching.
> 
> 
> 
>   2024-03-05:
>   Generating Unique Random Filenames in Python
> 
> 
> 
>   2023-12-28:
>   Copy Files and Overwrite on Linux
> 
> 
> 
>   2024-01-31:
>   Tracking File Movements in Google Drive
> 
> 
> 
>   2024-01-07:
>   Understanding the Files in the Server Directory
> 
> 
> 
>   2022-12-21:
>   James asked about Lenfest grants and user-defined exceptions; Arachne explained methods in Python and suggested Zoom interview title guidelines.
> 
> 
> 
>   2023-08-24:
>   Pickle Files and the `with` Statement
> 
> 
> 
>   2023-08-09:
>   James asked about matrix multiplication in Python; Arachne recommended using NumPy's `np.dot()` function.
> 
> 
> 
>   2023-07-21:
>   James inquired about creating a flexible function in Julia, similar to Python's `map`; Arachne provided initial and revised code examples to match desired functionality.
> 
> 
>     
**user**:
> How can I do os.listdir in python, but only for files in the given directory (not subdirs)?
**assistant**:
> You'll need to use the `os` and `os.path` modules in Python, comparing the full path to ensure that only files directly in the directory are included. Here's how you can do it:
> 
> ```python
> import os
> 
> def list_files_in_dir(directory):
>     return [file for file in os.listdir(directory) if os.path.isfile(os.path.join(directory, file))]
> 
> # Usage
> files = list_files_in_dir('/path/to/your/directory')
> print(files)
> ```
> 
> In this code, `os.listdir(directory)` gives you all entries in the given directory, including files and subdirectories. The expression `os.path.isfile(os.path.join(directory, file))` checks if each entry is a file by joining the directory path with the filename to get the full path, and then checking if this path is a file. The list comprehension filters the list to include only files.
