**assistant**:
> None of the provided past conversations directly address the issue of a missing Git submodule after 
**user**:
> I have a git repo which I added a submodule to. I've tried to pull it on a different server, but the submodule isn't there. What can I do?
**assistant**:
> When you clone a Git repository that contains submodules, the submodules are not automatically initialized. To pull both the main repository and its submodules, you'll need to perform a couple of additional steps. Here's what you should do:
> 
> 1. **Clone the repository with submodules**:
> 
>    If you haven't cloned the repository yet, you can clone it along with its submodules using:
> 
>    ```bash
>    git clone --recurse-submodules <repository-url>
>    ```
> 
> 2. **For an already cloned repository**:
> 
>    If you've already cloned the repository and the submodules are missing, run the following commands in the root of your cloned repository:
> 
>    ```bash
>    git submodule init
>    git submodule update
>    ```
> 
>    Alternatively, you can run them together with:
> 
>    ```bash
>    git submodule update --init --recursive
>    ```
> 
>    This command initializes and fetches all submodules recursively.
> 
> 3. **Handling updates**:
> 
>    If later on you want to update the submodules to match the main repository's current configuration, you can use:
> 
>    ```bash
>    git pull --recurse-submodules
>    ```
> 
>    Or, after a regular `git pull`, update submodules with:
> 
>    ```bash
>    git submodule update --recursive --remote
>    ```
> 
> By following these steps, you should have your submodules correctly initialized and updated on the other server. Let me know if you need further assistance!
