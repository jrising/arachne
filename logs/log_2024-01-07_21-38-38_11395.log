**assistant**:
> Below are selected log entries of past conversations, as part of an experimental AI memory system. They may have no bearing on the chat.
> 
> 
>   2023-12-24:
>   Fixing "Table doesn't exist" Error in MediaWiki Update
> 
> 
> 
>   2023-12-25:
>   MediaWiki Upgrade: Missing Content and Rev Comment Issues
> 
> 
> 
>   2023-08-24:
>   Pickle Files and the `with` Statement
> 
> 
> 
>   2023-12-25:
>   Resolving Missing Content Issue in MediaWiki Upgrade
> 
> 
> 
>   2023-07-14:
>   James asked how to combine PDFs with bookmarks in Adobe Acrobat; Arachne provided a step-by-step guide to accomplish this.
> 
> 
> 
>   2023-08-19:
>   James inquired about finding a file in Python with known directory but incomplete filename; Arachne suggested using the `glob` module for pattern matching.
> 
> 
> 
>   2023-12-28:
>   Copy Files and Overwrite on Linux
> 
> 
> 
>   2023-06-12:
>   James wanted to encode a unicode object to ASCII in Python 2; Arachne provided methods to remove or replace unencodable characters.
> 
> 
> 
>   2023-04-14:
>   Asked about removing minor grid lines in ggplot; provided code snippet to remove them.
> 
> 
> 
>   2023-03-09:
>   James asked about R equivalent to decode_cf; Arachne mentioned ncdf4, which doesn't decode time. Arachne then suggested using udunits2 for time decoding.
> 
> 
>     
**user**:
> I have a bunch of sql files, and wherever there is a CREATE TABLE it includes "ENGINE=MyISAM", but this is causing me trouble. How can I remove the text "ENGINE=MyISAM" from every sql file in a directory?
**assistant**:
> Sure, James, you can use a combination of `grep` and `sed` commands to achieve this. Here is a basic Bash script that will look for the `ENGINE=MyISAM` string in every `.sql` file in a directory and replace it with nothing.
> 
> Please backup your files before running this script to prevent any data loss.
> 
> ```bash
> for file in *.sql
> do
>   sed -i 's/ENGINE=MyISAM//g' "$file"
> done
> ```
> 
> This script does the following:
> 
> 1. The `for file in *.sql` line tells the script to perform the upcoming operations on every file in the current directory that ends with `.sql`.
> 2. `sed -i 's/ENGINE=MyISAM//g' "$file"` is the command that actually does the replacement. `sed` is a stream editor. `-i` is used for in-place editing i.e., it modifies the files it operates upon. The argument `'s/ENGINE=MyISAM//g'` instructs `sed` to substitute (`s`) the string `ENGINE=MyISAM` with nothing (`//`) globally (`g`). The string `"$file"` allows the `sed` command to work on each file found by the `for` loop.
> 
> Remember to navigate to the desired directory using `cd /your/directory/path/` before running this script.
> 
> Please be cautious about this command as it won't distinguish WHERE "ENGINE=MyISAM" is in the file, so if it occurs in places other than the "CREATE TABLE" statements you'll have to adjust the script appropriately to prevent undesired substitutions.
