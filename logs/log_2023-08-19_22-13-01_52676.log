**user**:
> How do I find a file in python, when I know it's directory but not an inner part of its filename?
**assistant**:
> If you know the directory but only part of the file name, you can use the `glob` module in Python. This module provides functionality to find all the pathnames matching a specified pattern.
> 
> Here's an example of how you could use it to find a file:
> 
> ```python
> import glob
> 
> def find_file_in_dir(directory, filename_part):
>     # ensure the directory path ends with '/' (important for glob to work correctly)
>     if not directory.endswith('/'):
>         directory += '/'
> 
>     # join directory path and filename part with wildcard (*)
>     search_pattern = directory + '*' + filename_part + '*'
> 
>     # find all files in the directory that contains filename_part in their names
>     files = glob.glob(search_pattern)
> 
>     return files
> ```
> 
> You can use the function like this:
> 
> ```python
> files = find_file_in_dir('/path/to/directory/', 'filename_part')
> print(files)
> ```
> 
> This will print an array of all file paths in the specified directory that contain `filename_part` in their names. 
> 
> Remember that the `filename_part` can be anywhere in the filename, it doesn't have to be the start or the end. Also, the search is case sensitive. If you can't find your file, make sure you've got the case correct.
> 
> If more than one file matches the pattern, all matching files are returned. If no files match, an empty list is returned.
