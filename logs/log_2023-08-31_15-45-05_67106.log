**user**:
> In R, how would you suggest turning a dataset of lat-lon points into a gridded dataset where each grid cell is described by the average value of an attribute that comes with those points?
**assistant**:
> Sure, in R, you can accomplish this by using some useful packages such as `sp`, `raster`, and `rgeos`. 
> 
> Here are the steps of the procedure:
> 
> 1. **Load the necessary libraries.**
> 
> ```R
> install.packages(c("sp", "raster", "rgeos"))
> library(sp)
> library(raster)
> library(rgeos)
> ```
> 
> 2. **Read your data.** 
> 
> Assume your data (`df`) has columns `lon`, `lat`, and `val` (where `val` is the value of the attribute you want to average). Convert the dataframe into a spatialPointsDataFrame:
> 
> ```R
> coordinates(df) <- ~lon+lat
> ```
> 
> 3. **Create an empty grid.** 
> 
> You need to define the spatial extent and the grid cell size:
> 
> ```R
> grid <- raster(extent(df), resolution=c(1,1))    # set resolution as required
> ```
> 
> 4. **Rasterize your data.** 
> 
> Convert the spatial points to a raster layer, where each cell contains the number of points per cell:
> 
> ```R
> r <- rasterize(df, grid, df$val, fun=mean)       # using mean as the aggregation function
> ```
> 
> 5. **Handle NA values.**
> 
> If you want to handle NA values, one way is to fill it up with zeros:
> 
> ```R
> r[is.na(r)] <- 0
> ```
> 
> 6. **Export the raster data (optional).**
> 
> If you want to export this raster data for further use:
> 
> ```R
> writeRaster(r, filename="grid.tif", format="GTiff", overwrite=TRUE) 
> ```
> That's it. Your gridded dataset now contains the average value of the attribute for each cell. Please adjust the grid cell size (resolution) and the function to aggregate the data (here: mean) according to your needs.
