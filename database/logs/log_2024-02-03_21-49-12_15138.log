The conversation revolved around understanding the behavior of jQuery's `.each()` method when applied to a list of jQuery DOM elements, where the function returns a promise. The assistant clarified that when using `.each()`, the return value is the original jQuery collection it was invoked on, regardless of any promises returned by the function provided to `.each()`. The assistant noted the difference between `.each()` and JavaScript's `Array.prototype.map` in how they handle return values. To obtain a list of promises, the assistant suggested using jQuery's `$.map` method or JavaScript's `Array.prototype.map` instead, providing an example for the latter. Additionally, the assistant highlighted the need to convert the jQuery object to a JavaScript array using `.toArray()` in order to use `Array.prototype.map`.
